{"ast":null,"code":"var _jsxFileName = \"/Users/aamer/react/csv-file/src/App.js\";\nimport React from \"react\";\nimport { parse } from \"papaparse\";\nexport default function App() {\n  const [highlighted, setHighlighted] = React.useState(false);\n  const [contacts, setContacts] = React.useState([{\n    email: \"fake@gmail.com\",\n    name: \"Fake\"\n  }]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center text-4xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Contact Import\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `p-6 my-2 mx-auto max-w-md border-2 ${highlighted ? \"border-green-600 bg-green-100\" : \"border-gray-600\"}`,\n    onDragEnter: () => {\n      setHighlighted(true);\n    },\n    onDragLeave: () => {\n      setHighlighted(false);\n    },\n    onDragOver: e => {\n      e.preventDefault();\n    },\n    onDrop: e => {\n      e.preventDefault();\n      setHighlighted(false);\n      const file = e.dataTransfer.files[0];\n      const fileReader = new FileReader();\n      fileReader.readAsText(file);\n\n      fileReader.onload = function () {\n        const dataset = fileReader.result;\n        const result = dataset.split('\\n').map(data => data.split(','));\n        console.log('resulllllllllllt' + result);\n      }; // Array.from(e.dataTransfer.files)\n      //   .filter((file) => file.type === \"text/csv\")\n      //   .forEach(async (file) => {\n      //     const text = await file.text();\n      //     const result = parse(text, { header: true });\n      //     setContacts((existing) => [...existing, ...result.data]);\n      //   });\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"DROP HERE\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, contact.name), \": \", contact.email))));\n}","map":{"version":3,"sources":["/Users/aamer/react/csv-file/src/App.js"],"names":["React","parse","App","highlighted","setHighlighted","useState","contacts","setContacts","email","name","e","preventDefault","file","dataTransfer","files","fileReader","FileReader","readAsText","onload","dataset","result","split","map","data","console","log","contact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAtC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACK,QAAN,CAAe,CAC7C;AAAEG,IAAAA,KAAK,EAAE,gBAAT;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAD6C,CAAf,CAAhC;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,IAAA,SAAS,EAAG,sCACVN,WAAW,GAAG,+BAAH,GAAqC,iBAC/C,EAHL;AAIE,IAAA,WAAW,EAAE,MAAM;AACjBC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KANH;AAOE,IAAA,WAAW,EAAE,MAAM;AACjBA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KATH;AAUE,IAAA,UAAU,EAAGM,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACD,KAZH;AAaE,IAAA,MAAM,EAAGD,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAP,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA,YAAMQ,IAAI,GAAGF,CAAC,CAACG,YAAF,CAAeC,KAAf,CAAqB,CAArB,CAAb;AACA,YAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,MAAAA,UAAU,CAACE,UAAX,CAAsBL,IAAtB;;AACAG,MAAAA,UAAU,CAACG,MAAX,GAAoB,YAAY;AAC9B,cAAMC,OAAO,GAAGJ,UAAU,CAACK,MAA3B;AACA,cAAMA,MAAM,GAAGD,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoBC,GAApB,CAAwBC,IAAI,IAAIA,IAAI,CAACF,KAAL,CAAW,GAAX,CAAhC,CAAf;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBL,MAA/B;AACD,OAJD,CANa,CAWb;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KA/BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,CAACgB,GAAT,CAAcI,OAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAAClB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASkB,OAAO,CAACjB,IAAjB,CADF,QACoCiB,OAAO,CAAClB,KAD5C,CADD,CADH,CAtCF,CADF;AAgDD","sourcesContent":["import React from \"react\";\nimport { parse } from \"papaparse\";\n\nexport default function App() {\n  const [highlighted, setHighlighted] = React.useState(false);\n  const [contacts, setContacts] = React.useState([\n    { email: \"fake@gmail.com\", name: \"Fake\" },\n  ]);\n\n  return (\n    <div>\n      <h1 className=\"text-center text-4xl\">Contact Import</h1>\n      <div\n        className={`p-6 my-2 mx-auto max-w-md border-2 ${\n          highlighted ? \"border-green-600 bg-green-100\" : \"border-gray-600\"\n          }`}\n        onDragEnter={() => {\n          setHighlighted(true);\n        }}\n        onDragLeave={() => {\n          setHighlighted(false);\n        }}\n        onDragOver={(e) => {\n          e.preventDefault();\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          setHighlighted(false);\n          const file = e.dataTransfer.files[0];\n          const fileReader = new FileReader();\n          fileReader.readAsText(file);\n          fileReader.onload = function () {\n            const dataset = fileReader.result;\n            const result = dataset.split('\\n').map(data => data.split(','));\n            console.log('resulllllllllllt'+result);\n          };\n          // Array.from(e.dataTransfer.files)\n          //   .filter((file) => file.type === \"text/csv\")\n          //   .forEach(async (file) => {\n          //     const text = await file.text();\n          //     const result = parse(text, { header: true });\n          //     setContacts((existing) => [...existing, ...result.data]);\n          //   });\n        }}\n      >\n        DROP HERE\n      </div>\n\n      <ul>\n        {contacts.map((contact) => (\n          <li key={contact.email}>\n            <strong>{contact.name}</strong>: {contact.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}